name: Android Build

on:
  workflow_dispatch: # To trigger manual build
  release:
    types: [published]

env:
  REPO_PATH: apps/mobile

jobs:
  android-build:
    name: Android Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}
    
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
  
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Set up our JDK environment # For Android build
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11

      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: cd ${{ env.REPO_PATH }}/android && chmod +x ./gradlew

      # Building and signing App
      - name: Build Android App Bundle
        run: |
            cd ${{ env.REPO_PATH }}/android && ./gradlew bundleRelease --no-daemon

      - name: Sign App Bundle
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
            releaseDirectory: android/app/build/outputs/apk/release
            signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
            alias: ${{ secrets.ANDROID_ALIAS }}
            keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
            keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

        ## Distribute  App to google play alpha track
      - name: Upload App to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
            serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON_TEXT }}
            packageName: com.test.test
            releaseFiles: android/app/build/outputs/bundle/release/*.aab
            track: alpha
            status: completed
            inAppUpdatePriority: 2